<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"  
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd    
	http://www.springframework.org/schema/mvc    
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd   
	 
    "
    >
    
     <context:component-scan base-package="com.mine.chapter12"/>
    <!-- 数据源 -->
    <bean id = "dataSource" class = "com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value = "com.mysql.jdbc.Driver"/>
        <property name="url" value = "jdbc:mysql://localhost:3306/shiro"/>
        <property name="username" value = "root"/>
        <property name="password" value = "123456"/>
    </bean>
    
    
    <!-- 缓存管理器  使用Ehcache实现-->
    <bean 
        id = "cacheManager" 
        class = "org.apache.shiro.cache.ehcache.EhCacheManager"
        >
       <property 
           name="cacheManagerConfigFile"
           value = "classpath:ehcache.xml"
           /> 
    </bean>
    
     <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class= "com.mine.chapter12.credentials.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>
 
   <!-- Realm实现 -->
	<bean id="userRealm" class="com.mine.chapter12.realm.UserRealm">
    <!--     <property name="userService" ref="userService"/> -->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>   
   
	
   <!-- 会话ID生成器 -->
   <bean
       id = "sessionIdGenerator" 
       class = "org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"
       />
   <!-- 会话cookie模板 -->
   <bean 
       id="sessionIdCookie"
       class = "org.apache.shiro.web.servlet.SimpleCookie"
       >
       <constructor-arg value = "sid"/>
       <property name="httpOnly" value = "true"/>
       <property name="maxAge" value = "180000"/>
   </bean>
  
   <!-- 会话DAO -->
   <bean
       id = "sessionDAO"
       class = "org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO"
       >
       <property name="activeSessionsCacheName"
           value = "shiro-activeSessionCache"
           />
       <property name="sessionIdGenerator" 
           ref ="sessionIdGenerator"/>
   </bean>
   
   <!-- 会话验证调度器 -->
   <bean
       id = "sessionValidationScheduler"
       class 
       = "org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler"
       >
       <property name="sessionValidationInterval" value = "1800000" />
       <property name="sessionManager" ref = "sessionManager"/>
   </bean>
   
   <!-- 会话管理器 -->
   <bean
       id = "sessionManager"
       class = "org.apache.shiro.web.session.mgt.DefaultWebSessionManager"
       >
      <property name="globalSessionTimeout" value = "1800000"/>
      <property name="deleteInvalidSessions" value = "true"/>
      <property name="sessionValidationSchedulerEnabled" value = "true"/>
      <property name="sessionValidationScheduler" 
          		ref = "sessionValidationScheduler"/>
      <property name="sessionDAO" ref="sessionDAO"/>
      <property name="sessionIdCookieEnabled" value = "true"/>
      <property name="sessionIdCookie" ref = "sessionIdCookie"/>
   </bean>
   
   <!-- 安全管理器 -->
   <bean id = "securityManager"
       	 class = "org.apache.shiro.web.mgt.DefaultWebSecurityManager"
       >
      <property name="realm" ref = "userRealm"/> 
      <property name="sessionManager" ref = "sessionManager"/>
      <property name="cacheManager" ref = "cacheManager"/>
   </bean>
   
   <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
   <bean
       class = "org.springframework.beans.factory.config.MethodInvokingFactoryBean"
       >
       <property name="staticMethod"
           value = "org.apache.shiro.SecurityUtils.setSecurityManager"
           />
       <property name="arguments" ref="securityManager"/>
   </bean>
   
   
   <!-- 基于form表单的身份验证过滤器 -->
   <bean
       id = "formAuthenticationFilter" 
       class = "org.apache.shiro.web.filter.authc.FormAuthenticationFilter"
       >
       <property name="usernameParam" value="username"/>
       <property name="passwordParam" value = "password"/>
   <!--     <property name="loginUrl" value = "/login.jsp"/> -->
   </bean>
   
   <!-- shiro的web过滤器 -->
   <bean
       id = "shiroFilter"
       class = "org.apache.shiro.spring.web.ShiroFilterFactoryBean"
       >
      <property name="securityManager" ref = "securityManager"/>
     <!--  <property name="loginUrl" value ="/login.jsp"/> -->
      <property name="unauthorizedUrl" value = "/unauthorized.jsp"/>
      <property name="filters">
          <util:map>
              <entry key = "authc" value-ref="formAuthenticationFilter"/>
          </util:map>
      </property> 
      <property name="filterChainDefinitions">
          <value>
              /index.jsp = anon
              /unauthorized.jsp = anon
      
              /logout = logout
              /** = user
          </value>
         
      </property>
   </bean>
    <!--      /login.jsp = authc -->
   <!-- shiro生命周期处理 -->
   <bean
       id = "lifecycleBeanPostProcessor"
       class = "org.apache.shiro.spring.LifecycleBeanPostProcessor"
       />
   <!-- spring中注册该类用于创建一个通过Name获取实例的工具类 -->
   <bean id="springBeanPool" class="com.mine.chapter12.util.SpringBeanPool"/>
</beans>























